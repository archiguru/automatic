# 定义运行nginx的用户和用户组
user nginx nginx;
# 自动设置工作进程数量
worker_processes auto;
# 定义错误日志文件路径和日志级别
error_log /var/log/nginx/error.log crit;

# 定义nginx主进程的PID文件路径
pid /run/nginx.pid;

# 设置每个工作进程的最大打开文件描述符数量
worker_rlimit_nofile 51200;


events {
    # 使用epoll事件模型
    use epoll;
    # 设置每个工作进程的最大连接数
    worker_connections 51200;
    # 开启一次性接受多个连接
    multi_accept on;
}

http {
    # 包含MIME类型文件
    include mime.types;
    # 默认MIME类型
    default_type application/octet-stream;
    types_hash_max_size 2048;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # 设置服务器名称散列表的大小
    server_names_hash_bucket_size 128;
    # 设置客户端请求头缓冲区大小
    client_header_buffer_size 32k;
    # 设置大型客户端请求头缓冲区大小
    large_client_header_buffers 4 32k;
    # 设置客户端请求体的最大大小
    client_max_body_size 1024m;
    # 设置客户端请求体缓冲区大小
    client_body_buffer_size 10m;
    # 开启sendfile支持
    sendfile on;
    # 开启TCP NOPUSH功能
    tcp_nopush on;
    # 客户端空闲连接超时时间
    keepalive_timeout 120;
    # 隐藏nginx版本号
    server_tokens off;
    # 开启TCP_NODELAY
    tcp_nodelay on;

    # 设置FastCGI连接超时时间
    fastcgi_connect_timeout 300;
    # 设置FastCGI发送超时时间
    fastcgi_send_timeout 300;
    # 设置FastCGI读取超时时间
    fastcgi_read_timeout 300;
    # 设置FastCGI缓冲区大小
    fastcgi_buffer_size 64k;
    # 设置FastCGI缓冲区数量和大小
    fastcgi_buffers 4 64k;
    # 设置FastCGI忙时缓冲区大小
    fastcgi_busy_buffers_size 128k;
    # 设置FastCGI临时文件写入大小
    fastcgi_temp_file_write_size 128k;
    # 开启FastCGI错误拦截
    fastcgi_intercept_errors on;

    # 开启Gzip压缩
    gzip on;
    gzip_buffers 16 8k;
    gzip_comp_level 6;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_proxied any;
    gzip_vary on;
    gzip_types
    text/xml application/xml application/atom+xml application/rss+xml application/xhtml+xml image/svg+xml
    text/javascript application/javascript application/x-javascript
    text/x-json application/json application/x-web-app-manifest+json
    text/css text/plain text/x-component
    font/opentype application/x-font-ttf application/vnd.ms-fontobject
    image/x-icon;
    gzip_disable "MSIE [1-6]\.(?!.*SV1)";
    # 自定义日志格式
    log_format custom_format '$remote_addr - $remote_user ["$time_iso8601"] ' '"$request_method $request_uri $server_protocol" ' '$status $body_bytes_sent ' '"$http_referer" "$http_user_agent" ' 'upstream_response_time "$upstream_response_time" ' 'request_time "$request_time" ' 'server_addr="$server_addr" ' 'scheme="$scheme" ' 'request_length="$request_length" ' 'uri="$uri" ' 'upstream_host="$upstream_addr" ' 'upstream_status="$upstream_status" ' 'host="$host"';

    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }
    ######################## default ############################
    server {
        # 监听80端口
        listen 80;
        # 默认服务器名称
        server_name _;
        # 访问日志文件路径和日志格式
        access_log /var/log/nginx/access.log combined;
        # 默认站点根目录
        root /var/www/default;
        # 默认文档索引
        index index.html index.htm;

        #error_page 404 /404.html;
        #error_page 502 /502.html;

        # nginx状态页面
        location /nginx_status {
            stub_status on;
            access_log off;
            allow 127.0.0.1;
            deny all;
        }

        # 设置静态文件缓存时间
        location ~ .*\.(gif|jpg|jpeg|png|bmp|swf|flv|mp4|ico)$ {
            expires 30d;
            access_log off;
        }

        # 设置js和css文件缓存时间
        location ~ .*\.(js|css)?$ {
            expires 7d;
            access_log off;
        }

        # 防止访问敏感文件
        location ~ ^/(\.user.ini|\.ht|\.git|\.svn|\.project|LICENSE|README.md) {
            deny all;
        }

        # 允许访问well-known目录
        location /.well-known {
            allow all;
        }
    }

    ########################## vhost #############################
    # 包含所有vhost配置文件
    include /etc/nginx/conf.d/*.conf;
    # 包含所有启用的站点配置
    include /etc/nginx/sites-enabled/*;
}
